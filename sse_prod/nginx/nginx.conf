events {
    worker_connections    1024;
}

http {
    # docker logs nginx(container) 로 로그를 확인하기 위한 설정
    log_format main   'nginx log check'
                        '$remote_addr - $remote_user [$time_local] "$request" '
                        '$status $body_bytes_sent "$http_referer" '
                        '"$http_user_agent" "$http_x_forwarded_for" '
                        '"$scheme://$host$request_uri"';

    access_log /dev/access.log;
    error_log /dev/error.log;

    # gpt 답변이 길어서 504 timeout이 발생함 그걸 방지 하는 코드
    proxy_connect_timeout       300;
    proxy_send_timeout          300;
    proxy_read_timeout          300;
    send_timeout                300;

    server {
        listen 80;
        listen [::]:80;

        server_name k9e207a.p.ssafy.io;

        # Allow only for register SSL (Certbot)
        location ~ /.well-known/acme-challenge {
            allow all;
            root /var/www/html;
        }

        # Http로 들어온 요청을 Https로 Redirect
        location / {
            rewrite ^ https://$host$request_uri? permanent;
        }
    }

    server {
        listen 443 ssl;
        server_name k9e207a.p.ssafy.io;

        ssl_certificate /etc/letsencrypt/live/k9e207a.p.ssafy.io/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/k9e207a.p.ssafy.io/privkey.pem;

        # /api1로 시작하는 요청은 Spring으로 프록시
        # /api1/something 으로 들어오는 요청을 api1 항목을 제거하고
        location / {
            # CORS 에러 대응을 위해 헤더에 추가하는 내용들
            # add_header 'Access-Control-Allow-Origin' '*';
            add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS';
            add_header 'Access-Control-Allow-Headers' 'Content-Type, Authorization';

            #rewrite ^/api(/.*)$ $1?$args break;
            proxy_pass http://3.35.25.97:8090/;
            access_log /dev/access.log main;

            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_cache_bypass $http_upgrade;
        }

        location /upload {
            proxy_pass http://3.35.25.97:8090;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $host;
            proxy_set_header Origin "";
        }
    }
}